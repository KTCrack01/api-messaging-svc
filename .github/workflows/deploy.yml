name: build & deploy (messaging)

on:
  push:
    branches: ["main"]     # main에 push될 때 자동 실행
  workflow_dispatch:        # 수동 실행 버튼도 활성화

permissions:
  id-token: write
  contents: read

env:
  IMAGE_NAME: docker.io/${{ secrets.DH_USER }}/api-messaging-svc

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build jar (skip tests)
        run: ./gradlew bootJar -x test

      - name: Set IMAGE_TAG with datetime
        run: echo "IMAGE_TAG=$(date +'%m%d_%H%M')" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PASS }}

      - name: Build & Push image
        run: |
          IMAGE_FULL=$IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE_FULL=$IMAGE_FULL" >> $GITHUB_ENV

          docker build -t $IMAGE_FULL .
          docker push $IMAGE_FULL

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy container image to App Service
        run: |
          az webapp config container set \
            --name ${{ secrets.WEBAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --docker-custom-image-name $IMAGE_NAME:$IMAGE_TAG \
            --docker-registry-server-url https://index.docker.io

      - name: Restart App
        run: az webapp restart --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }}

      - name: Show App URL
        run: az webapp show --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} --query defaultHostName -o tsv
